package db

import (
	"encoding/hex"
	"encoding/json"

	"github.com/republicprotocol/swapperd/core/wallet/transfer"
)

var (
	TableTransfer      = [8]byte{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03}
	TableTransferStart = [40]byte{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}
	TableTransferLimit = [40]byte{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF}
)

func (db *dbStorage) PutTransfer(transfer transfer.TransferReceipt) error {
	transferData, err := json.Marshal(transfer)
	if err != nil {
		return err
	}
	txHashBytes, err := txHashToBytes(transfer.TxHash)
	if err != nil {
		return err
	}
	return db.db.Put(append(TableSwaps[:], txHashBytes...), transferData, nil)
}

func txHashToBytes(txHash string) ([]byte, error) {
	if len(txHash) > 2 && txHash[:2] == "0x" {
		txHash = txHash[2:]
	}
	return hex.DecodeString(txHash)
}

func Transfers() ([]transfer.TransferReceipt, error) {
	return nil, nil
}
